name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Software version'
        required: true
      prerelease:
        description: 'Pre-release?'
        required: false
        default: false
  push:
    tags:
      - v[0-9]+.*
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  actions: read
  id-token: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.TOKEN }}
          generate_notes: true
          title: Version $version
          overwrite: true

  upload-assets:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - name: Setup OpenSSL
      if: runner.os == 'windows'
      shell: powershell
      run: |
        echo "PERL=$((where.exe perl)[0])" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        echo "OPENSSL_SRC_PERL=$((where.exe perl)[0])" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
    - name: Install dependencies
      if: runner.os == 'linux'
      run: |
          sudo apt-get update
          sudo apt-get -y install \
            libfontconfig1-dev \
            libharfbuzz-dev \
            libtiff-dev \
            libconfig++-dev \
            libconfig-dev
    - uses: actions/checkout@v4
    - uses: taiki-e/upload-rust-binary-action@v1
      with:
        bin: ocsp-server
        include: LICENSE,README.md,config.toml,service.sh
        target: ${{ matrix.target }}
        archive: $bin-$tag-$target
        tar: unix
        zip: windows
        token: ${{ secrets.GITHUB_TOKEN }}
